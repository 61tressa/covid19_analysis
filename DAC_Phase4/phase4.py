# -*- coding: utf-8 -*-
"""Untitled36.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17_Sg1v_e7Wjh0buq_DJ4LLPhhq51tOiB
"""

import pandas as pd

# Load the COVID-19 dataset
data = pd.read_csv("Covid_19_cases4.csv")

# Display the first few rows to understand the data structure
print(data.head())

# Check for missing values
print(data.isnull().sum())

# Data Cleaning
# Remove rows with missing values, if any
data.dropna(inplace=True)

# Data Transformation
# Convert date column to a datetime object
data['dateRep'] = pd.to_datetime(data['dateRep'])

# Aggregate data if needed (e.g., daily, weekly)
# For example, to get daily new cases and deaths
data['cases'] = data.groupby('countriesAndTerritories')['cases'].diff().fillna(0)
data['deaths'] = data.groupby('countriesAndTerritories')['deaths'].diff().fillna(0)

# Data Quality Assurance
# Validate data accuracy and consistency as necessary

# Save the cleaned dataset to a new file
data.to_csv("covid19_cleaned_data.csv", index=False)
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.datasets import load_iris

# Loading the dataset
X, Y = load_iris(return_X_y = True)

# Splitting the dataset in training and test data
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.3, random_state = 0)

# Training the model using the Support Vector Classification class of sklearn
svc = SVC()
svc.fit(X_train, Y_train)

# Computing the accuracy score of the model
def compute_accuracy(Y_true, Y_pred):
    correctly_predicted = 0
    # iterating over every label and checking it with the true sample
    for true_label, predicted in zip(Y_true, Y_pred):
        if true_label == predicted:
            correctly_predicted += 1
    # computing the accuracy score
    accuracy_score = correctly_predicted / len(Y_true)
    return accuracy_score
Y_pred = svc.predict(X_test)
score = compute_accuracy(Y_test, Y_pred)
print(score)

import matplotlib.pyplot as plt
import pandas as pd

# Sample COVID-19 dataset (replace with your data)
data = {
    'Date': ['2023-01-01', '2023-01-02', '2023-01-03', '2023-01-04', '2023-01-05'],
    'Cases': [100, 150, 200, 180, 220],
    'Deaths': [5, 10, 8, 12, 9]
}

# Convert data to a Pandas DataFrame
df = pd.DataFrame(data)

# Convert the 'Date' column to a datetime object
df['Date'] = pd.to_datetime(df['Date'])

# Create a line chart
plt.figure(figsize=(10, 6))
plt.plot(df['Date'], df['Cases'], label='Cases', marker='o')
plt.plot(df['Date'], df['Deaths'], label='Deaths', marker='o')

# Customize the chart
plt.title('COVID-19 Cases and Associated Deaths')
plt.xlabel('Date')
plt.ylabel('Count')
plt.grid(True)
plt.legend()

# Show the chart
plt.show()